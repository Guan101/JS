{"remainingRequest":"/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/vuepress-plugin-qrcode/QrCode.vue?vue&type=style&index=0&id=404668ae&lang=stylus&","dependencies":[{"path":"/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/vuepress-plugin-qrcode/QrCode.vue","mtime":499162500000},{"path":"/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiaoguan/Desktop/GUAN/webpack/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5xcmNvZGVCdG4gewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB1c2VyLXNlbGVjdDogbm9uZTsKCiAgJjpob3ZlciB7CiAgICBjb2xvcjogJGFjY2VudENvbG9yOwogICAgY3Vyc29yOiBwb2ludGVyOwogIH0KCiAgI3FyY29kZUNvbnRhaW5lciB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogMDsKICAgIHRvcDogNTBweDsKICB9Cn0K"},{"version":3,"sources":["QrCode.vue"],"names":[],"mappings":";AAoGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"QrCode.vue","sourceRoot":"node_modules/vuepress-plugin-qrcode","sourcesContent":["<template>\n  <div class=\"qrcodeBtn\" @mousedown.stop=\"showQrCode\">\n    <span class=\"labelText\">{{ labelText || \"Mobile Read\" }}</span>\n    <qrcode-vue\n      id=\"qrcodeContainer\"\n      v-if=\"show\"\n      ref=\"qrcodeContainer\"\n      :value=\"qrcodeText\"\n      :size=\"qrSize\"\n      level=\"H\"\n    ></qrcode-vue>\n  </div>\n</template>\n\n<script>\nimport QrcodeVue from \"qrcode.vue\";\nimport { isRealNum } from \"./util\";\nexport default {\n  components: {\n    QrcodeVue,\n  },\n  data() {\n    return {\n      show: false, //show or hide\n      qrcodeText: \"\", // url\n      qrSize: 100, //square size\n      channelQR:''\n    };\n  },\n  props: {\n    labelText: {\n      type: String,\n      default: \"\",\n    },\n    size: {\n      type: [String, Number],\n      default: \"\",\n    },\n    channel: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  mounted() {\n    // tranform size\n    let newV = this.size;\n\n    let realSize = \"\";\n    switch (newV) {\n      case \"small\":\n        realSize = 100;\n        break;\n      case \"medium\":\n        realSize = 150;\n        break;\n      case \"big\":\n        realSize = 200;\n        break;\n      default:\n        if (isRealNum(newV)) {\n          const min = Math.min(window.innerHeight, window.innerWidth);\n          newV = ~~newV;\n          if (newV < 10) {\n            realSize = 10;\n          } else if (newV > min) {\n            realSize = min;\n          } else {\n            realSize = newV;\n          }\n        } else {\n          realSize = 100;\n        }\n        break;\n    }\n    this.qrSize = realSize;\n\n    // handle channel \n    if(this.channel){\n      this.channelQR = (location.href.indexOf('?') > -1 ? '&channel=qrcode' : '?channel=qrcode')\n    }\n\n    document.documentElement.addEventListener(\"mousedown\", () => {\n      this.show = false;\n    });\n  },\n  methods: {\n    showQrCode() {\n      this.show = !this.show;\n\n      if (this.show) {\n        this.$nextTick(() => {\n          this.qrcodeText = location.href + this.channelQR;\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"stylus\">\n.qrcodeBtn {\n  position: relative;\n  user-select: none;\n\n  &:hover {\n    color: $accentColor;\n    cursor: pointer;\n  }\n\n  #qrcodeContainer {\n    position: absolute;\n    right: 0;\n    top: 50px;\n  }\n}\n</style>\n"]}]}