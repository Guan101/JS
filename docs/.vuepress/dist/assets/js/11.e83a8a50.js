(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{290:function(a,v,_){"use strict";_.r(v);var t=_(7),s=Object(t.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"java-基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-基础"}},[a._v("#")]),a._v(" Java 基础")]),a._v(" "),v("h2",{attrs:{id:"学习规划"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#学习规划"}},[a._v("#")]),a._v(" 学习规划")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("基础部分  （1个月） 2023/03/12 -- 04/12")])]),a._v(" "),v("li",[v("p",[a._v("前后端基础")])]),a._v(" "),v("li",[v("p",[a._v("经典框架")])]),a._v(" "),v("li",[v("p",[a._v("分布式项目")])]),a._v(" "),v("li",[v("p",[a._v("高级和前沿技术")])]),a._v(" "),v("li",[v("p",[a._v("全栈项目")])])]),a._v(" "),v("h2",{attrs:{id:"mac-终端命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mac-终端命令"}},[a._v("#")]),a._v(" Mac  终端命令")]),a._v(" "),v("p",[a._v("（需补充windows doc命令）")]),a._v(" "),v("p",[a._v("cd 目录  进入目录")]),a._v(" "),v("p",[a._v("cd .. 返回上一级")]),a._v(" "),v("p",[a._v("cd ~ 返回默认目录")]),a._v(" "),v("p",[a._v("mkdir 目录   创建目录")]),a._v(" "),v("p",[a._v("touch 文件+后缀  创建文件")]),a._v(" "),v("p",[a._v("rmdir 目录  删除空目录")]),a._v(" "),v("p",[a._v("rm -rf 文件/目录名   删除空或非空目录、文件")]),a._v(" "),v("p",[a._v("ls 展示当前路径 文件")]),a._v(" "),v("p",[a._v("ls -a 展示当前路径文件+隐藏文件")]),a._v(" "),v("h2",{attrs:{id:"开发环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发环境"}},[a._v("#")]),a._v(" 开发环境")]),a._v(" "),v("p",[a._v("JDK = JRE + 开发工具集（例如javac变异工具等）")]),a._v(" "),v("p",[a._v("JRE = JVM + java SE标准类库")]),a._v(" "),v("blockquote",[v("p",[a._v("安装的java 8 、17版本的")])]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v('class HelloChina{\n    public static void main(String[] args){\n        System.out.println("hello world!!!你好");\n        System.out.printIn("hahah");\n    }\n}\n')])])]),v("h2",{attrs:{id:"注释方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注释方法"}},[a._v("#")]),a._v(" 注释方法")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("// 当行注释\n\n\n/*\n多行注释\n...\n...\n*/\n\n\n/**\n文档注释（java特有）-可以生成网页形式的说明\n命令：javadoc -d -author -version helloword.java\n@author guanwenhao\n@version 1.0\n */\n")])])]),v("blockquote",[v("p",[a._v("Jav API")])]),a._v(" "),v("h2",{attrs:{id:"java优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java优缺点"}},[a._v("#")]),a._v(" java优缺点")]),a._v(" "),v("p",[a._v("1、跨平台性\n2、面向对象性：高内聚、低耦合\n3、健壮性\n4、安全性高：安全防范机制\n5、简单性\n6、高性能")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("内存泄漏：本该回收的垃圾，程序没有回收导致泄漏；会浪费空间；比较多的内存泄漏也会导致内存溢出")])]),a._v(" "),v("li",[v("p",[a._v("内存溢出：内存空间不够，会报错。")])])]),a._v(" "),v("p",[a._v("练习：个人信息输出")]),a._v(" "),v("p",[a._v("\\n 换行符  \\t制表符")]),a._v(" "),v("p",[a._v("《Java核心技术》、《Effective Java》 《Java编程思想》")]),a._v(" "),v("p",[a._v("java目前的主要应用场景：javaEE后台开发、android客户端开发、大数据开发")]),a._v(" "),v("h3",{attrs:{id:"关键字-keyword"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关键字-keyword"}},[a._v("#")]),a._v(" 关键字（keyword）")]),a._v(" "),v("p",[a._v("全部都是小写")]),a._v(" "),v("h2",{attrs:{id:"标识符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[a._v("#")]),a._v(" 标识符")]),a._v(" "),v("p",[a._v("java中变量、方法、类等要素命名时使用的字符序列\n比如：类名、方法名、变量名、包名、常量名")]),a._v(" "),v("p",[a._v("** 标识符命名规则 ** （建议遵守）：")]),a._v(" "),v("ul",[v("li",[a._v("26字母大小写，0-9，_或$组成")]),a._v(" "),v("li",[a._v("数字不可以开头")]),a._v(" "),v("li",[a._v("不能使用关键字和保留字，但能包含关键字和保留字")]),a._v(" "),v("li",[a._v("java中严格区分大小写，长度无限制")]),a._v(" "),v("li",[a._v("标识符中不能有空格")])]),a._v(" "),v("p",[a._v("** 标识符命名规范 ** ：")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("包名：多单词组成时所有字母都小写 ：xxxyyyzzz")])]),a._v(" "),v("li",[v("p",[a._v("类名、接口名：多单词组成时所有单词的首字母大写 : XxxxYyyyZzzz(大驼峰)")])]),a._v(" "),v("li",[v("p",[a._v("变量名、方法名：多单词组成时第一个单词首字母小写，第二个单词开始每个单词首字母大写：xxxYyyyZzzz（小驼峰）")])]),a._v(" "),v("li",[v("p",[a._v("常量名：所有字母都大写。多单词时每个单词用下划线连接：XXX_YYY_ZZZ")])])]),a._v(" "),v("h2",{attrs:{id:"变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),v("ul",[v("li",[a._v("变量：内存中的一个存储区域，该区域的数据可以在 同一类型 范围内不断变化")]),a._v(" "),v("li",[a._v("变量的构成包含三个要素：数据类型、变量名、存储的值")]),a._v(" "),v("li",[a._v("声明格式：数据类型 变量名 = 变量值")])]),a._v(" "),v("p",[a._v("java变量按照数据类型分类")]),a._v(" "),v("h2",{attrs:{id:"数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),v("h3",{attrs:{id:"基本数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[a._v("#")]),a._v(" 基本数据类型")]),a._v(" "),v("ul",[v("li",[a._v("整型：byte 、 short 、 int 、 long")]),a._v(" "),v("li",[a._v("浮点型:float 、 double")]),a._v(" "),v("li",[a._v("字符型：char")]),a._v(" "),v("li",[a._v("布尔型：boolean")])]),a._v(" "),v("h3",{attrs:{id:"引用数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[a._v("#")]),a._v(" 引用数据类型：")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("类（class）")])]),a._v(" "),v("li",[v("p",[a._v("数组（array）")])]),a._v(" "),v("li",[v("p",[a._v("接口（interface）")])]),a._v(" "),v("li",[v("p",[a._v("枚举（enum）")])]),a._v(" "),v("li",[v("p",[a._v("注解（annotation）")])]),a._v(" "),v("li",[v("p",[a._v("记录（record）")])])]),a._v(" "),v("p",[a._v("@说明：变量都有其作用域，变量只在作用域内是有效的，出了作用域就失效了。")]),a._v(" "),v("p",[a._v("byte  1字节=8bit位   -128～127\nshort 2字节   +-2的15次方\ninit  4字节   +-2的31次方   （一般用这个）\nlong  8字节   +—2的63次方\n声明 longl类型变量时，需要提供后缀，后缀为'l'或'L'")]),a._v(" "),v("p",[a._v("单精度float 精确到7位有效数字(声明时后面需要为'f'或'F')\n双精度double 精确到14位有效数字 (开发中默认用double类型)")]),a._v(" "),v("p",[a._v("精度很高时用BegDecimal类")]),a._v(" "),v("h4",{attrs:{id:"字符类型-char"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符类型-char"}},[a._v("#")]),a._v(" 字符类型 char")]),a._v(" "),v("p",[a._v("(2个字节)\n表示形式")]),a._v(" "),v("p",[a._v("1、使用一对''，内部有且只能有一个字符，")]),a._v(" "),v("p",[a._v("2、直接使用unicode来表示字符型变量：'\\uXXXXX',其中，XXXXX表示一个十六进制整数，")]),a._v(" "),v("p",[a._v("3、使用转义字符  char c1 = '\\t';")]),a._v(" "),v("p",[a._v("4、使用具体字符对应的数值（比如ASCII码）char c2 = 87")]),a._v(" "),v("h4",{attrs:{id:"布尔类型-boolean"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型-boolean"}},[a._v("#")]),a._v(" 布尔类型 boolean")]),a._v(" "),v("p",[a._v("boolean bo1 = true")]),a._v(" "),v("p",[a._v("注意：不可以使用0、1来表示true、false")]),a._v(" "),v("h3",{attrs:{id:"基本数据类型变量间运算规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型变量间运算规则"}},[a._v("#")]),a._v(" 基本数据类型变量间运算规则")]),a._v(" "),v("p",[a._v("1、自动类型提升")]),a._v(" "),v("p",[a._v("当容量小的变量与容量大的变量做运算时，结果自动转换为容量大的数据类型\nbyte、short、char--\x3eint--\x3elong--\x3efloat--\x3edouble")]),a._v(" "),v("p",[v("em",[a._v("特殊的情况")]),a._v(": byte、short、char变量之间做运算后要用int做接收")]),a._v(" "),v("p",[a._v("long l1 = 123L;")]),a._v(" "),v("p",[a._v("long 13 = 123;//理解为：自动类型提升")]),a._v(" "),v("p",[a._v("long l4 = 12313123131313;//被理解为int,所以超范围，导致报错；")]),a._v(" "),v("p",[a._v("整型常量，规定为int类型。\n浮点性常量，规定为double类型")]),a._v(" "),v("p",[a._v("2、强制类型转换")]),a._v(" "),v("p",[a._v("1、如果需要将容量大的变量的类型转换为容量小的变量的类型，需要使用强制类型转换\n2、强制类型转换需要使用强转符：（） 在（）内指明要转换的数据类型。\n3、强制类型转换过程中，可能会导致精度损失。")]),a._v(" "),v("h3",{attrs:{id:"基本数据类型与string的运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型与string的运算"}},[a._v("#")]),a._v(" 基本数据类型与String的运算")]),a._v(" "),v("p",[a._v('1、String类，属于引用数据类型。\n2、String类型的变量，可以使用一对""的方式进行赋值。\n3、String声明的字符串内部，可以包含0个，1个或多个字符。')]),a._v(" "),v("h3",{attrs:{id:"string与基本数据类型变量间的运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#string与基本数据类型变量间的运算"}},[a._v("#")]),a._v(" String与基本数据类型变量间的运算")]),a._v(" "),v("p",[a._v('String与基本数据类型变量间只能做连接运算，使用"+"表示，\n运算的结果是String类型')]),a._v(" "),v("h2",{attrs:{id:"运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[a._v("#")]),a._v(" 运算符")]),a._v(" "),v("h3",{attrs:{id:"算数运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[a._v("#")]),a._v(" 算数运算符")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("+ - * / %(取余)\n")])])]),v("p",[a._v("取模以后的结果的符号与被取模的数的符号相同")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("++(前)。先自增一，再运算")])]),a._v(" "),v("li",[v("p",[a._v("++（后）。先运算，后自增一")])]),a._v(" "),v("li",[v("p",[a._v("--（前）。先自减一，再运算")])]),a._v(" "),v("li",[v("p",[a._v("--（后）。先运算，后自减一")])])]),a._v(" "),v("p",[a._v("++ 或 -- 不会改变数据的类型")]),a._v(" "),v("h3",{attrs:{id:"赋值运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[a._v("#")]),a._v(" 赋值运算符")]),a._v(" "),v("blockquote",[v("p",[a._v("=  +=  —=  *=  /=  %=")])]),a._v(" "),v("p",[a._v("1、当“=”两侧数据类型不一致时，可以使用自动类型转换或使用强制类型转换原则进行处理")]),a._v(" "),v("p",[a._v("2、支持连续赋值")]),a._v(" "),v("p",[a._v("3、+= —= *= /= %= 这些错做不会改变变量的原本的数据类型")]),a._v(" "),v("h4",{attrs:{id:""}},[v("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")]),a._v(" =")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("int a;\nint b;\na=b=10;\n\nint a = 10,b = 20;\n")])])]),v("h4",{attrs:{id:"、"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#、"}},[a._v("#")]),a._v(" +=、-=")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("int m1 = 10;\nm1+=5\n\nbyte by1 = 10\nby1 += 5;\n// by1 = by1+5 操作会报错\n")])])]),v("h4",{attrs:{id:"-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[a._v("#")]),a._v(" *=")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("int m2 = 1\nm2 *= 0.1. //0\n")])])]),v("p",[a._v("1、如何实现变量的值增加2❓")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("//方式1\nint n1 = 10\nn1 = n1 + 2\n\n//方式2: 推荐 ✅\nint n2 = 10\nn2 += 2\n")])])]),v("p",[a._v("2、\n如何实现变量的值增加1❓")]),a._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[a._v("//方式1\nint n1 = 10\nn1 = n1 + 1\n\n//方式2:  \nint n2 = 10\nn2 += 1\n\n//方式2: 推荐 ✅  \nint n3 = 10\nn3 ++\n")])])]),v("h3",{attrs:{id:"比较-关系-运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#比较-关系-运算符"}},[a._v("#")]),a._v(" 比较（关系）运算符")]),a._v(" "),v("blockquote",[v("p",[a._v("==    !=   <   >  <=    >=   instanceof(检查是否是类的对象)-")])]),a._v(" "),v("p",[a._v("🎺 instanceof 在面向对象的多态性的位置介绍")]),a._v(" "),v("p",[a._v("🏁 ==    !=   <   >  <=    >= 适用于除boolean型以外的七种基本数据类型")]),a._v(" "),v("p",[a._v("🐮 == != 可适用于引用数据类型")]),a._v(" "),v("h3",{attrs:{id:"逻辑运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[a._v("#")]),a._v(" 逻辑运算符")]),a._v(" "),v("p",[a._v("切 ： & 或 &&")]),a._v(" "),v("p",[a._v("或 ： || 或 ||")]),a._v(" "),v("p",[a._v("非 ： !a")]),a._v(" "),v("p",[a._v("异或 ： a^b  两者不一样时，为true")]),a._v(" "),v("blockquote",[v("p",[a._v("⚠️：")])]),a._v(" "),v("blockquote",[v("p",[a._v("1、逻辑运算符针对的都是boolean类型的变量进行的操作")])]),a._v(" "),v("blockquote",[v("p",[a._v("2、逻辑运算的结果也是boolean类型")])]),a._v(" "),v("blockquote",[v("p",[a._v("3、逻辑运算符常用语条件判断结构、循环结构中")])]),a._v(" "),v("p",[a._v("区分 & 和 &&")]),a._v(" "),v("p",[a._v("共同点：都是切")]),a._v(" "),v("p",[a._v("不同点：")]),a._v(" "),v("p",[a._v("& ：两个都会执行判断")]),a._v(" "),v("p",[a._v("&& : 有一个是false,另一个就不用判断了 （开发中推荐 ✅）")]),a._v(" "),v("p",[a._v("区分 | 和 ||")]),a._v(" "),v("p",[a._v("共同点：都是或")]),a._v(" "),v("p",[a._v("不同点：")]),a._v(" "),v("p",[a._v("| ：两个都会执行判断")]),a._v(" "),v("p",[a._v("|| : 有一个是true,另一个就不用判断了 （开发中推荐 ✅）")])])}),[],!1,null,null,null);v.default=s.exports}}]);